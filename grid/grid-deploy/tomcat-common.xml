<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Copyright 2005-2009 Sun Microsystems, Inc. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 * 
 * This code is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2
 * only, as published by the Free Software Foundation.
 * 
 * This code is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License version 2 for more details (a copy is
 * included in the LICENSE file that accompanied this code).
 * 
 * You should have received a copy of the GNU General Public License
 * version 2 along with this work; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 * 
 * Please contact Sun Microsystems, Inc., 16 Network Circle, Menlo
 * Park, CA 94025 or visit www.sun.com if you need additional
 * information or have any questions.
 */
-->

<project name="tomcat-common" basedir="."
	 xmlns:dav="antlib:org.apache.webdav.ant"
	 xmlns:caroline="antlib:com.sun.caroline.tools.carolant">

    <property name="service.base" value="apache-tomcat-6.0.18"/>
    <import file="web-common.xml"/>
    <property name="service.conf" value="${www.filesystem}/${service.base}/conf/"/>
    <property name="service.webapps" value="${service.working}/webapps/"/>

    <target name="copy-support-files"
    description="Copy the build support files to the grid"
    depends="upload-distribution,update-config">
      <!-- Copy the policy and build files from the distribution -->
        <dav:copy url="${config.url}/jsk-all.policy"
		destination="${dav.url}/${www.filesystem}/jsk-all.policy"
		verbose="true"
		overwrite="true"
		userid="${user}" password="${pw}"/>

        <dav:copy url="${config.url}/unzip-dist.xml"
		destination="${dav.url}/${www.filesystem}/unzip-dist.xml"
		verbose="true"
		overwrite="true"
		userid="${user}" password="${pw}"/>

        <dav:copy url="${config.url}/deploy-war.xml"
		destination="${dav.url}/${www.filesystem}/deploy-war.xml"
		verbose="true"
		overwrite="true"
		userid="${user}" password="${pw}"/>
    </target>
    
    <!-- Deploy a war file on-grid -->
    <target name="deploy-war"
        description="Deploys a war file on the grid"
        depends="upload-war,create-deploy-intaddress,copy-support-files">

        <!-- Creates and starts a Caroline process to run ant and have it deploy
            the war file -->
        <caroline:process name="deploy-task" op="create"
            workingdir="/files/working"
            duration="task">
            <!-- Filesystems to mount -->
            <caroline:filesystem name="${www.filesystem}" mountpoint="working"/>
            <caroline:filesystem name="${dist.filesystem}" mountpoint="dist"/>
            <caroline:filesystem name="${packages.filesystem}" mountpoint="sys.packages"/>
            <!-- An address, since we need to talk to the servers -->
            <caroline:intaddress name="deploy-int" networkname="${network}"/>
            <!-- Set environment variables -->
            <env key="ANT_HOME" value="/files/${ant.col}"/>
            <env key="JAVA_HOME" value="/usr/java"/>
            <!-- Specify the command line -->
            <arg value="-Dservice.process=${service.process}"/>
            <arg value="-Dwar.file=/files/dist/web/${deployment.name}/${war.file}"/>
            <arg value="-Dwar.path=${war.path}"/>
            <arg value="-Dservice.webapps=${service.webapps}"/>
            <arg value="-jar"/>
            <arg value="/files/${ant.col}/ant-launcher.jar"/>
            <arg value="-f"/>
            <arg value="deploy-war.xml"/>
            <arg value="-v"/>
            <arg value="deploy"/>
        </caroline:process>
    </target>
    
    <!-- Undeploy a war file on-grid -->
    <target name="undeploy-war"
        description="Deploys a war file on the grid"
        depends="create-deploy-intaddress">

        <!-- Creates and starts a Caroline process to run ant and have it deploy
            the war file -->
        <caroline:process name="deploy-task" op="create"
            workingdir="/files/working"
            duration="task">
            <!-- Filesystems to mount -->
            <caroline:filesystem name="${www.filesystem}" mountpoint="working"/>
            <caroline:filesystem name="${dist.filesystem}" mountpoint="dist"/>
            <caroline:filesystem name="${packages.filesystem}" mountpoint="sys.packages"/>
            <!-- An address, since we need to talk to the servers -->
            <caroline:intaddress name="deploy-int" networkname="${network}"/>
            <!-- Set environment variables -->
            <env key="ANT_HOME" value="/files/${ant.col}"/>
            <env key="JAVA_HOME" value="/usr/java"/>
            <!-- Specify the command line -->
            <arg value="-Dservice.process=${service.process}"/>
            <arg value="-Dwar.file=/files/dist/web/${deployment.name}/${war.file}"/>
            <arg value="-Dwar.path=${war.path}"/>
            <arg value="-Dservice.webapps=${service.webapps}"/>
            <arg value="-jar"/>
            <arg value="/files/${ant.col}/ant-launcher.jar"/>
            <arg value="-f"/>
            <arg value="deploy-war.xml"/>
            <arg value="-v"/>
            <arg value="undeploy"/>
        </caroline:process>
    </target>

</project>
