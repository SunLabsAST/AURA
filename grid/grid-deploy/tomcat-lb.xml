<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Copyright 2005-2009 Sun Microsystems, Inc. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 * 
 * This code is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2
 * only, as published by the Free Software Foundation.
 * 
 * This code is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License version 2 for more details (a copy is
 * included in the LICENSE file that accompanied this code).
 * 
 * You should have received a copy of the GNU General Public License
 * version 2 along with this work; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 * 
 * Please contact Sun Microsystems, Inc., 16 Network Circle, Menlo
 * Park, CA 94025 or visit www.sun.com if you need additional
 * information or have any questions.
 */
-->

<project name="tomcat-lb" default="create-service" basedir="."
	 xmlns:dav="antlib:org.apache.webdav.ant"
	 xmlns:caroline="antlib:com.sun.caroline.tools.carolant">

  <!-- Get a deployment name and number from the properties passed in. -->
  <condition property="deployment.name" value="www">
    <not>
      <isset property="deployment.name"/>
    </not>
  </condition>

  <condition property="deployment.number" value="1">
    <not>
      <isset property="deployment.number"/>
    </not>
  </condition>

  <property name="www.filesystem" value="${deployment.name}-${deployment.number}.filesystem"/>
  <property name="intaddress" value="${deployment.name}-${deployment.number}-int"/>
  <property name="intbinding" value="${deployment.name}-${deployment.number}.intbinding"/>
  <property name="service.process" value="${deployment.name}-${deployment.number}"/>

  <import file="tomcat-common.xml"/>
  
  <!-- create process registration if it doesn't exist -->
  <target name="create-service"
	  description="creates a service process if one doesn't exist"
	  depends="deploy-ant,unzip-distribution,update-config,create-intbinding">
    
    <caroline:process name="${service.process}"
		      op="create" workingdir="/files/working/">                
      <!-- filesystem to mount -->    
      <caroline:filesystem name="${www.filesystem}" mountpoint="working"/>
      <caroline:filesystem name="${dist.filesystem}" mountpoint="dist"/>
      <!-- assign an internal address -->
      <caroline:intaddress name="${intaddress}" networkname="${network}"/>
      <!-- specify command line arguments -->
      <arg value="-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager"/>
      <arg value="-Djava.util.logging.config.file=${service.working}/conf/logging.properties"/>
      <arg value="-Djava.endorsed.dirs=${service.working}/endorsed"/>
      <arg value="-classpath"/>
      <arg value=":${service.working}/bin/bootstrap.jar:${service.working}/bin/commons-logging-api.jar"/>
      <arg value="-Dcatalina.base=${service.working}"/>
      <arg value="-Dcatalina.home=${service.working}"/>
      <arg value="-Djava.io.tmpdir=${service.working}/temp"/>
      <arg value="org.apache.catalina.startup.Bootstrap"/>
      <arg value="start"/>
    </caroline:process>
  </target>
  
  <!-- Update resources -->
  
  <!-- update service process -->
  <target name="update-service"
	  description="updates process registration"
	  depends="update-config">
    <caroline:process name="${service.process}" op="update"/>
  </target>
  
  <target name="cleanup"
	  depends="destroy-service,destroy-unzip-task,destroy-deploy-task,destroy-intaddress,destroy-filesystem"/>

</project>
