<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * Copyright 2005-2009 Sun Microsystems, Inc. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 * 
 * This code is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2
 * only, as published by the Free Software Foundation.
 * 
 * This code is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License version 2 for more details (a copy is
 * included in the LICENSE file that accompanied this code).
 * 
 * You should have received a copy of the GNU General Public License
 * version 2 along with this work; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 * 
 * Please contact Sun Microsystems, Inc., 16 Network Circle, Menlo
 * Park, CA 94025 or visit www.sun.com if you need additional
 * information or have any questions.
 */
-->

<project name="gf-common" basedir="."
	 xmlns:dav="antlib:org.apache.webdav.ant"
	 xmlns:caroline="antlib:com.sun.caroline.tools.carolant">

    <property name="service.base" value="glassfishv3"/>

    <import file="web-common.xml"/>

    <property name="domain" value="aura"/>
    <property name="domain.dir" value="${service.working}/glassfish/domains/${domain}"/>
    <property name="service.conf" value="${www.filesystem}/${service.base}/glassfish/domains/${domain}/config/"/>

  <!-- Update service configuration files -->
    <target name="update-config" 
    description="copies service configuration into the correct position">
    <!-- update the configuration files contained in the distribution -->
        <echo message="Source URL: ${config.url}/gf/domain.xml"/>
        <echo message="Dest URL: ${dav.url}/${service.conf}/domain.xml"/>
        <dav:copy url="${config.url}/gf/domain.xml"
	      destination="${dav.url}/${service.conf}/domain.xml"
	      verbose="true"
	      overwrite="true"
	      userid="${user}" password="${pw}"/>
        <dav:copy url="${config.url}/gf/logging.properties"
	      destination="${dav.url}/${service.conf}/logging.properties"
	      verbose="true"
	      overwrite="true"
	      userid="${user}" password="${pw}"/>
        <dav:copy url="${config.url}/gf/server.policy"
	      destination="${dav.url}/${service.conf}/server.policy"
	      verbose="true"
	      overwrite="true"
	      userid="${user}" password="${pw}"/>
        <dav:copy url="${config.url}/unzip-dist.xml"
		destination="${dav.url}/${www.filesystem}/unzip-dist.xml"
		verbose="true"
		overwrite="true"
		userid="${user}" password="${pw}"/>
        <dav:copy url="${config.url}/asadmin.pass"
		destination="${dav.url}/${www.filesystem}/asadmin.pass"
		verbose="true"
		overwrite="true"
		userid="${user}" password="${pw}"/>
    </target>

  <!-- Deploy a war file on-grid -->
    <target name="deploy-war"
	  description="Deploys a war file on the grid"
	  depends="upload-war,create-deploy-intaddress">

    <!-- Creates and starts a Caroline process to run ant and have it deploy
	 the war file -->
        <caroline:process name="deploy-task" op="create"
		      workingdir="/files/working"
		      duration="task">
      <!-- Filesystems to mount -->
            <caroline:filesystem name="${www.filesystem}" mountpoint="working"/>
            <caroline:filesystem name="${dist.filesystem}" mountpoint="dist"/>
            <caroline:filesystem name="${packages.filesystem}" mountpoint="sys.packages"/>
      <!-- An address, since we need to talk to the servers -->
            <caroline:intaddress name="deploy-int" networkname="${network}"/>
      <!-- Set environment variables -->
            <env key="AS_INSTALL" value="/files/working/${service.base}/glassfish"/>
            <env key="AS_INSTALL_LIB" value="/files/working/${service.base}/glassfish/modules"/>
      <!-- Specify the command line -->
            <arg value="-jar"/>
            <arg value="/files/working/${service.base}/glassfish/modules/admin-cli.jar"/>
            <arg value="deploy"/>
            <arg value="--host"/>
            <arg value="${service.process}"/>
            <arg value="--user"/>
            <arg value="admin"/>
            <arg value="--passwordfile"/>
            <arg value="/files/working/asadmin.pass"/>
            <arg value="--contextroot"/>
            <arg value="${war.path}"/>
            <arg value="--force"/>
            <arg value="true"/>
            <arg value="/files/dist/web/${deployment.name}/${war.file}"/>
        </caroline:process>
    </target>
  
  <!-- Undeploy a war file on-grid -->
    <target name="undeploy-war"
	  description="Undeploys a war file on the grid"
	  depends="create-deploy-intaddress">

    <!-- Creates and starts a Caroline process to run ant and have it deploy
	 the war file -->
        <caroline:process name="deploy-task" op="create"
		      workingdir="/files/working"
		      duration="task">
      <!-- Filesystems to mount -->
            <caroline:filesystem name="${www.filesystem}" mountpoint="working"/>
            <caroline:filesystem name="${dist.filesystem}" mountpoint="dist"/>
            <caroline:filesystem name="${packages.filesystem}" mountpoint="sys.packages"/>
      <!-- An address, since we need to talk to the servers -->
            <caroline:intaddress name="deploy-int" networkname="${network}"/>
      <!-- Set environment variables -->
            <env key="AS_INSTALL" value="/files/working/glassfish"/>
            <env key="AS_INSTALL_LIB" value="/files/working/glassfish/modules"/>
      <!-- Specify the command line -->
            <arg value="-jar"/>
            <arg value="/files/working/${service.base}/glassfish/modules/admin-cli.jar"/>
            <arg value="undeploy"/>
            <arg value="--host"/>
            <arg value="${service.process}"/>
            <arg value="--user"/>
            <arg value="admin"/>
            <arg value="--passwordfile"/>
            <arg value="/files/working/asadmin.pass"/>
            <arg value="${war.path}"/>
        </caroline:process>
    </target>

</project>
