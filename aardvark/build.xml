<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="aardvark" default="default" basedir=".">
    <description>Builds, tests, and runs the project aardvark.</description>
    <import file="nbproject/build-impl.xml"/>

    <import file="nbproject/profiler-build-impl.xml"/>

    <target name="-pre-init">
        <property file="nbproject/standalone-build-properties.xml"/>
    </target>
    <target name="-init-macrodef-junit">
        <macrodef name="junit" uri="http://www.netbeans.org/ns/j2se-project/3">
            <attribute default="${includes}" name="includes"/>
            <attribute default="${excludes}" name="excludes"/>
            <attribute default="**" name="testincludes"/>
            <sequential>
                <junit dir="${work.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" showoutput="true">
                    <batchtest todir="${build.test.results.dir}">
                        <fileset dir="${test.src.dir}" excludes="@{excludes},${excludes}" includes="@{includes}">
                            <filename name="@{testincludes}"/>
                        </fileset>
                    </batchtest>
                    <classpath>
                        <path path="${run.test.classpath}"/>
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="test-sys-prop."/>
                        <mapper from="test-sys-prop.*" to="*" type="glob"/>
                    </syspropertyset>
                    <formatter type="brief" usefile="false"/>
                    <formatter type="xml"/>
                    <jvmarg line="${run.jvmargs}"/>
                </junit>
                <junitreport todir="${build.test.results.dir}">
                    <fileset dir="${build.test.results.dir}">
                        <include name="TEST-*.xml" />
                    </fileset>
                    <report todir="${build.test.results.dir}" />
                </junitreport>
            </sequential>
        </macrodef>
    </target>
    
    <!-- Builds a copy of the jar with a specific main class and the jini libraries -->
    <target depends="init,compile,-pre-pre-jar,-pre-jar" name="do-dist-jar-with-libraries">
        <property location="${build.classes.dir}" name="build.classes.dir.resolved"/>
        <pathconvert property="run.classpath.without.build.classes.dir">
            <path path="${run.classpath}"/>
            <map from="${build.classes.dir.resolved}" to=""/>
        </pathconvert>
        <pathconvert pathsep=" " property="jar.classpath">
            <path path="${run.classpath.without.build.classes.dir}"/>
            <chainedmapper>
                <flattenmapper/>
                <globmapper from="*" to="lib/*"/>
            </chainedmapper>
        </pathconvert>
        <taskdef classname="org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs" classpath="${libs.CopyLibs.classpath}" name="copylibs"/>
        <copylibs compress="${jar.compress}" jarfile="${dist.jar}" manifest="${manifest.file}" runtimeclasspath="${run.classpath.without.build.classes.dir}">
            <fileset dir="${build.classes.dir}"/>
            <manifest>
                <attribute name="Main-Class" value="com.sun.labs.aura.AuraServiceStarter"/>
                <attribute name="Class-Path" value="${jar.classpath}"/>
            </manifest>
        </copylibs>
    </target>
    
    <target name="make-dist-jar-dir" description="Make the dist jar directory" depends="do-dist-jar-with-libraries">
        <property location="${dist.dir}/dist" name="dd"/>
        <property location="../Libraries" name="lib.dir"/>
        <delete file="${dist.dir}/aardvark-dist.jar"/>
        <mkdir dir="${dd}"/>
        <mkdir dir="${dd}/lib"/>
        <copy file="${lib.dir}/jini/jsk-all.policy" todir="${dd}"/>
        <copy file="${dist.jar}" todir="${dd}"/>
        <copy file="${dist.jar}" todir="${dd}/lib"/>
        <copy todir="${dd}/lib">
            <fileset dir="${dist.dir}/lib"/>
        </copy>
    </target>
    
    <!-- Package up the jar with the service starter main class along with some
         other things. -->
    <target name="dist-jar" description="Build a jar to distribute" depends="make-dist-jar-dir">
        <jar jarfile="${dist.dir}/aardvark-dist.jar" basedir="${dist.dir}" includes="dist/**"/>
        <delete dir="${dist.dir}/dist"/>
    </target>
</project>
